{"version":3,"file":null,"sources":["../src/convert/fromCodePoint.js","../src/convert/toCodePoint.js","../src/convert/index.js","../data/codepoints.js","../src/index.js"],"sourcesContent":["/**\n * Given an codepoint, returns UTF16 surrogate pairs.\n *\n * @param   string  unicode, i.e. '1F601'\n * @return  string  unicode transformed into utf16 surrogates pair,\n *          i.e. \\uD83D\\uDE01\n *\n * @example\n *  emojiNative.convert.fromCodePoint('1F601');\n *  // \"\\uD83D\\uDE01\"\n *\n */\n\nfunction fromCodePoint(input) {\n  // convert codepoint to charCode\n  const charCode = parseInt(input.toString(16), 16);\n  if (charCode >= 0x10000 && charCode <= 0x10FFFF) {\n    const highSurrogate = Math.floor((charCode - 0x10000) / 0x400) + 0xD800;\n    const lowSurrogate = ((charCode - 0x10000) % 0x400) + 0xDC00;\n    return String.fromCharCode(highSurrogate) + String.fromCharCode(lowSurrogate);\n  }\n  return String.fromCharCode(charCode);\n}\nexport default fromCodePoint;\n","/**\n * Given a native native unicode, return hex codepoint.\n *\n * @param   string  native unicode, i.e. '\\uD83D\\uDE01'\n * @return  string  native unicode transformed into hex codepoint,\n *          i.e. 1F601\n *\n * @example\n *  emojiRecovery.convert.toCodePoint('\\uD83D\\uDE01');\n *  // \"1F601\"\n *\n */\n\nfunction toCodePoint(input) {\n  if (input.length === 1) {\n    return input.charCodeAt(0).toString(16).toUpperCase();\n  }\n  const high = input.charCodeAt(0);\n  const low = input.charCodeAt(1);\n  if (high >= 0xD800 && high <= 0xDBFF && low >= 0xDC00 && low <= 0xDFFF) {\n    return (((high - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000).toString(16).toUpperCase();\n  }\n  return high.toString(16).toUpperCase();\n}\nexport default toCodePoint;\n","import fromCodePoint from './fromCodePoint';\n\nimport toCodePoint from './toCodePoint';\n\nexport default {\n  fromCodePoint,\n  toCodePoint,\n};\n","export default [\n  '1F004',\n  '1F0CF',\n  '1F170',\n  '1F171',\n  '1F17E',\n  '1F17F',\n  '1F18E',\n  '1F191-1F19A',\n  '1F1E8-1F1EC',\n  '1F1EE-1F1F0',\n  '1F1F7',\n  '1F1FA',\n  '1F201',\n  '1F202',\n  '1F21A',\n  '1F22F',\n  '1F232-1F23A',\n  '1F250',\n  '1F251',\n  '1F300-1F30C',\n  '1F30F',\n  '1F311',\n  '1F313-1F315',\n  '1F319',\n  '1F31B',\n  '1F31F',\n  '1F320',\n  '1F330',\n  '1F331',\n  '1F334',\n  '1F335',\n  '1F337-1F34A',\n  '1F34C-1F34F',\n  '1F351-1F37B',\n  '1F380-1F393',\n  '1F3A0-1F3C4',\n  '1F3C6',\n  '1F3C8',\n  '1F3CA',\n  '1F3E0-1F3E3',\n  '1F3E5-1F3F0',\n  '1F40C-1F40E',\n  '1F411',\n  '1F412',\n  '1F414',\n  '1F417-1F429',\n  '1F42B-1F43E',\n  '1F440',\n  '1F442-1F464',\n  '1F466-1F46B',\n  '1F46E-1F4AC',\n  '1F4AE-1F4B5',\n  '1F4B8-1F4EB',\n  '1F4EE',\n  '1F4F0-1F4F4',\n  '1F4F6',\n  '1F4F7',\n  '1F4F9-1F4FC',\n  '1F503',\n  '1F50A-1F514',\n  '1F516-1F52B',\n  '1F52E-1F53D',\n  '1F550-1F55B',\n  '1F5FB-1F5FF',\n  '1F601-1F606',\n  '1F609-1F60D',\n  '1F60F',\n  '1F612-1F614',\n  '1F616',\n  '1F618',\n  '1F61A',\n  '1F61C-1F61E',\n  '1F620-1F625',\n  '1F628-1F62B',\n  '1F62D',\n  '1F630-1F633',\n  '1F635',\n  '1F637-1F640',\n  '1F645-1F64F',\n  '1F680',\n  '1F683-1F685',\n  '1F687',\n  '1F689',\n  '1F68C',\n  '1F68F',\n  '1F691-1F693',\n  '1F695',\n  '1F697',\n  '1F699',\n  '1F69A',\n  '1F6A2',\n  '1F6A4',\n  '1F6A5',\n  '1F6A7-1F6AD',\n  '1F6B2',\n  '1F6B6',\n  '1F6B9-1F6BE',\n  '1F6C0'\n];\n","/**\n * emoji-recovery\n *\n * Copyright ¬© 2016 yahiousun. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport convert from './convert/index';\nimport codepoints from '../data/codepoints';\n\n// wrong emoji unicode regexp\nconst WRONG_EMOJI_UNICODE_REGEX = new RegExp(`[${codepoints\n                                .slice()\n                                .map(item => item\n                                  .replace(/1F[a-zA-Z0-9]{3}/g,\n                                    match => match.replace(/^1F/, '\\\\uf')))\n                                .join('')}]`,\n                                'g',\n                              );\n\nfunction parse(input) {\n  return input.replace(WRONG_EMOJI_UNICODE_REGEX,\n    char => String.fromCodePoint(65536 + char.charCodeAt(0)));\n}\n\nexport default {\n  // basic utilities / helpers to convert codepoint\n  // to native unicode and vice versa\n  convert,\n  /**\n   * String replacement for `innerHTML` or server side operations\n   *  emojiRecovery.parse(string);\n   *\n   * @name emojiRecovery.parse\n   * @function\n   * @param {String} replace wrong emoji unicode matches with native unicode.\n   * @example\n   *  emojiRecovery.parse('Hello\\uf601!');\n   *  // HelloüòÅ!\n   *\n   */\n  parse,\n};\n"],"names":["fromCodePoint","input","charCode","parseInt","toString","highSurrogate","Math","floor","lowSurrogate","String","fromCharCode","toCodePoint","length","charCodeAt","toUpperCase","high","low","WRONG_EMOJI_UNICODE_REGEX","RegExp","codepoints","slice","map","item","replace","match","join","parse","char"],"mappings":"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"}